---
format_version: '7'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: flutter
trigger_map:
- push_branch: "*"
  workflow: primary
- pull_request_source_branch: "*"
  workflow: primary
workflows:
  deploy:
    steps:
    - activate-ssh-key@4.0.3:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4.0.14: {}
    - script@1.1.5:
        title: Do anything with Script step
    - certificate-and-profile-installer@1.10.1: {}
    - flutter-installer@0.9.2: {}
    - flutter-analyze@0.1.0:
        inputs:
        - project_location: "$BITRISE_FLUTTER_PROJECT_LOCATION"
    - flutter-test@0.9.1:
        inputs:
        - project_location: "$BITRISE_FLUTTER_PROJECT_LOCATION"
    - flutter-build@0.9.2:
        inputs:
        - project_location: "$BITRISE_FLUTTER_PROJECT_LOCATION"
        - platform: both
    - xcode-archive@2.4.20:
        inputs:
        - project_path: "$BITRISE_PROJECT_PATH"
        - scheme: "$BITRISE_SCHEME"
        - export_method: "$BITRISE_EXPORT_METHOD"
        - configuration: Release
    - deploy-to-bitrise-io@1.3.19: {}
  primary:
    steps:
    - activate-ssh-key@4.0.3:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - script@1.1.5:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            # write your script here
            cd $ANDROID_HOME/emulator

            echo no | avdmanager create avd -n Nexus_5X_API_26 -k "system-images;android-26;google_apis;x86" --force

            # or run a script from your repository, like:
            # bash ./path/to/script.sh
            # not just bash, e.g.:
            # ruby ./path/to/script.rb
        title: Create Android Emulator
    - git-clone@4.0.14: {}
    - script@1.1.5:
        title: Do anything with Script step
    - flutter-installer@0.9.2: {}
    - brew-install@0.9.0:
        inputs:
        - packages: imagemagick
    - script@1.1.5:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            # write your script here
            flutter packages pub global activate screenshots
        title: Install Screenshots
    - script@1.1.5:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            ls -a /Users/vagrant/.pub-cache
            ls -a /Users/vagrant/.pub-cache/bin
            ls -a /Users/vagrant/flutter-sdk
            ls -a /Users/vagrant/flutter-sdk/bin
            ls -a /Users/vagrant/flutter-sdk/bin/cache
            ls -a /Users/vagrant/flutter-sdk/bin/cache/dart-sdk

            export PATH="$PATH":/Users/vagrant/flutter-sdk/bin/cache/dart-sdk/bin
            export PATH="$PATH":/Users/vagrant/.pub-cache/bin
            #/Users/vagrant/.pub-cache/bin/screenshots

            echo $PATH

            screenshots

            # or run a script from your repository, like:
            # bash ./path/to/script.sh
            # not just bash, e.g.:
            # ruby ./path/to/script.rb
        title: Run Screenshots
    - deploy-to-bitrise-io@1.3.19:
        inputs:
        - deploy_path: android/fastlane/metadata/android/en-US/images/phoneScreenshots
        title: Get en Screenshots
    - deploy-to-bitrise-io@1.3.19:
        inputs:
        - deploy_path: android/fastlane/metadata/android/de-DE/images/phoneScreenshots
        title: Get de Screenshots
    - flutter-analyze@0.1.0:
        inputs:
        - project_location: "$BITRISE_FLUTTER_PROJECT_LOCATION"
    - flutter-test@0.9.1:
        inputs:
        - project_location: "$BITRISE_FLUTTER_PROJECT_LOCATION"
    - flutter-build@0.9.2:
        inputs:
        - ios_additional_params: "--debug"
        - platform: android
        - android_additional_params: "--debug"
    - deploy-to-bitrise-io@1.3.19: {}
app:
  envs:
  - opts:
      is_expand: false
    BITRISE_FLUTTER_PROJECT_LOCATION: "."
  - opts:
      is_expand: false
    BITRISE_PROJECT_PATH: ios/Runner.xcworkspace
  - opts:
      is_expand: false
    BITRISE_SCHEME: Runner
  - opts:
      is_expand: false
    BITRISE_EXPORT_METHOD: ad-hoc
